
Assignment 1
Create a report for overall distribution of duration of trending videos by each country.
The report will have video_id, video name (title), country, No_of_days_trended. Sample report:
Question: How many videos have trended for more than 5 days in the US?




select * from yt_trending_videos

select  count(*) from 
(
select video_id,title,country,count(trending_date)"days_trand" from yt_trending_videos
where country = "us" 
group by 1,2,3)A 
where days_trand > 5


===============================================================================================

Assignment 2
1 point possible (graded)
Create a report for overall distribution of duration of trending videos by each category. The report will have video_id, category title, No_of_days_trended.
Task: Save the report with assignment number in the Google work sheet as mentioned previously.

Question: Which category has the highest average trending period?

select * from yt_trending_videos

select snippettitle,avg(days_trand) from

(select video_id,snippettitle,title,count(trending_date)as "days_trand"  from yt_trending_videos t
inner join yt_category_map c
on t.category_id = c.id
group by 1,2,3
)a
group by 1
order by 2 desc

Assignment 2
Create a report for overall distribution of duration of trending videos by each category. The report will have video_id, category title, No_of_days_trended.
Task: Save the report with assignment number in the Google work sheet as mentioned previously.

Question: Which category has the highest average trending period?
select * from yt_trending_videos



SELECT snippettitle            AS category_title,
       Avg(no_of_days_trended) AS avg_trending_days
FROM   (SELECT video_id,
               title,
               snippettitle,
               Count(trending_date) AS no_of_days_trended
        FROM   yt_trending_videos a
               INNER JOIN yt_category_map b
                       ON a.category_id = b.id
        GROUP  BY video_id,
                  title,
                  snippettitle) a
GROUP  BY snippettitle
ORDER  BY avg_trending_days DESC 

========================================================================================
Assignment 3

Create a report for the number of distinct videos trending from each category on day of the week.
The report will have weekday, category title, No_videos_trended. 

select * from yt_trending_videos

SELECT snippettitle,
 Count(DISTINCT video_id)"no_of_video"
FROM   yt_trending_videos a
       INNER JOIN yt_category_map b
               ON a.category_id = b.id
WHERE  Weekday(trending_date) BETWEEN 0 AND 4
       AND snippettitle = 'Music'
GROUP  BY snippettitle 

=======================================================================
4Task: Save the report with assignment number in the Google work sheet as mentioned previously.

Question: What are the total views for category sports in ‘Canada’?


select * from yt_trending_videos

SELECT snippettitle AS category_title,
       country,
       Sum(total_views)  AS total_views,
       Sum(total_likes)  AS total_likes,
       Avg(no_of_days_trended) AS avg_trending_days
FROM   (SELECT video_id,
               title,
               snippettitle,
               country,
               Sum(views) AS total_views,
       	    Sum(likes) AS total_likes,
               Count(trending_date) AS no_of_days_trended
        FROM   yt_trending_videos a
               INNER JOIN yt_category_map b
                       ON a.category_id = b.id
        GROUP  BY video_id,
                  title,
                  snippettitle,
                  country ) c
WHERE  country = 'Canada'
       AND snippettitle = 'Sports'
GROUP  BY snippettitle,
          country
ORDER  BY country,
          avg_trending_days DESC 
          
          
=============================================================================================================
5.Rank the videos based on views, likes within each country.
Which country has the highest number of videos with rank for views and rank of likes both in top 20?

select * from yt_trending_videos




SELECT country,
       Count(video_id) AS no_of_videos
FROM   (SELECT video_id,
               title,
               country,
               views,
               likes,
               Rank()
                 OVER (
                   partition BY country
                   ORDER BY views DESC) AS rank_views,
               Rank()
                 OVER (
                   partition BY country
                   ORDER BY likes DESC) AS rank_likes
        FROM   yt_trending_videos) a
WHERE  rank_views <= 20
       AND rank_likes <= 20
GROUP  BY country
ORDER  BY no_of_videos DESC 
======================================================

select country,count(video_id)"no_of_videos" from

(select video_id,title,country,views,likes,rank()over(partition by country order by views desc)"rankR",
rank()over(partition by country order by likes desc)"likeR" from yt_trending_videos )A 
where rankR <=20
and likeR <=20
group by country 
order by 2;

==========================================================================================
Assignment 6

Generate a report at video level with video viewership rating within the category. (Report at video level means the output should be unique at video_id).

Formula to assign the rating: ((Views - min(views))*100 ) / max(views) - min(views)

where max(views) is maximum views in the respective video’s category

and min(views) is minimum views in the respective video’s category

select * from yt_trending_videos

select avg(rating) from

(select *,rank()over(partition by snippettitle order by rating desc)"rank"from

(select * ,((views -min_value)*100)/(max_value - min_value)"rating"  from 


(select distinct video_id, title,(views),snippettitle,max(views)over(partition by snippettitle)"max_value",
min(views)over(partition by snippettitle)"min_value"

from yt_trending_videos t
inner join yt_category_map c
on t.category_id = c.id
)a)b)c

where snippettitle ="music"

========================================================================================================
Assignment 7

Generate a report at video level with video ratings. (Report at video level means the output should be unique at video_id).

Rating formula to assign the rating: ((Likes - min(likes))*100 ) / max(likes) - min(likes)

where max(likes) is maximum likes in the respective video’s category

and min(likes) is minimum likes in the respective video’s category

select * from yt_trending_videos

select snippettitle,avg(rating)"avg" from

(select *,(((likes-min_like)*100)/(max_like - min_like))"rating" from

(select distinct video_id,title,snippettitle,likes,
max(likes)over(partition by category_id)"max_like",
min(likes)over(partition by category_id)"min_like" from yt_trending_videos t
inner join yt_category_map c
on t.category_id = c.id

)a)b
GROUP  BY snippettitle
ORDER  BY avg DESC

Question: Which category has the highest average rating based on likes?

SELECT category_title,
       Avg(rating) AS avg_rating
FROM   (SELECT c.*,
               Round(( ( likes - min_likes ) * 100 ) / ( max_likes - min_likes )
               , 0) AS
                      rating
        FROM   (SELECT DISTINCT video_id,
                                title,
                                snippettitle                  AS category_title,
                                likes,
                                Max(likes)
                                  OVER (
                                    partition BY category_id) AS max_likes,
                                Min(likes)
                                  OVER (
                                    partition BY category_id) AS min_likes
                FROM   yt_trending_videos a
                       INNER JOIN yt_category_map b
                               ON a.category_id = b.id) c) d
GROUP  BY category_title
ORDER  BY avg_rating DESC 
